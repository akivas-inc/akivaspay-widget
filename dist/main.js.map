{"mappings":"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","sources":["akivaspay_widegt/src/index.js","akivaspay_widegt/src/helpers.js","akivaspay_widegt/src/translations.js"],"sourcesContent":["import { STATUS_OF_REQUEST, formatCurrency, Response, fallback_locale, supported_locales, widgetHeader, timerSection, Localization } from \"./helpers.js\";\nimport styles from './styles.css';\n\nexport class AkivasPayWidget {\n    baseUrl = \"https://api.apay.akivaspay.com/\";\n    shopSubscriptionKey;\n    success = true;\n    requestStatus = STATUS_OF_REQUEST.INITIALIZING;\n    timeExpired = false;\n    errorMessage = '';\n    locale;\n    apayContainer;\n    modal;\n    response = new Response();\n    checkTransactionInterval;\n    timerInterval;\n    events = {\n        'apay-transaction-success': [],\n        'apay-regenerate-widget': []\n    };\n\n    constructor(shopSubscriptionKey, locale = fallback_locale) {\n        this.shopSubscriptionKey = shopSubscriptionKey;\n        if (locale in supported_locales) {\n            this.locale = locale;\n        }\n        else {\n            this.locale = fallback_locale;\n        }\n        this.apayContainer = document.createElement('div');\n        this.initWidget();\n    }\n\n    initWidget() {\n        this.apayContainer.innerHTML = '<div class=\"akivas-pay-modal\" id=\"akivaspayModal\" data-animation=\"slideInOutLeft\"></div>';\n        document.querySelector('body').appendChild(this.apayContainer);\n        this.modal = document.getElementById(\"akivaspayModal\");\n    }\n\n    regenerateCodeClickEventListener() {\n        const regenerateBtn = document.getElementById('apay-regenerate');\n        if (regenerateBtn != null && this.timeExpired) {\n            regenerateBtn.addEventListener('click', () => {\n                this.emit('apay-regenerate-widget');\n            });\n        }\n    }\n\n    closeClickEventListener() {\n        const closeElts = Object.values(document.getElementsByClassName('apay-close-widget'));\n        if (closeElts.length > 0) {\n            closeElts.forEach(el => {\n                el.addEventListener('click', () => {\n                    this.closeWidget();\n                })\n            });\n        }\n        \n    }\n\n    updateWidget() {\n        this.modal.innerHTML = this.getWidget();\n        this.closeClickEventListener();\n    }\n\n    showModal() {\n        this.modal.innerHTML = this.getWidget();\n        this.closeClickEventListener();\n    }\n\n    async regenerate(name, external_uuid, amount, description = '') {\n        this.timeExpired = false;\n        this.success = false;\n        this.errorMessage = '';\n        this.generate(name, external_uuid, amount, description);\n    }\n\n    async generate(name, external_uuid, amount, description = '') {\n        this.requestStatus = STATUS_OF_REQUEST.LOADING;\n        this.modal.classList.add('visible');\n        this.showModal();\n        let data = {\n            \"name\": name,\n            \"uuid\": external_uuid,\n            \"amount\": amount,\n            \"description\": description\n        };\n\n        var response = await fetch(this.baseUrl + 'generate/qrcode', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Accept-Language\": this.locale,\n                \"Shop-Subscription-Key\": this.shopSubscriptionKey\n            },\n            body: JSON.stringify(data),\n        });\n        \n        if (response.ok) {\n            response.json().then((json) => {\n                this.response = new Response(\n                    json.image,\n                    json.domain,\n                    json.link,\n                    name,\n                    amount\n                );\n                this.requestStatus = STATUS_OF_REQUEST.WAITING;\n                this.updateWidget();\n                var timer = document.getElementById('timer');\n                timer.textContent = 30 + \":\" + 0;\n                this.startTimer();\n                this.checkTransactionStatus(json.uuid).then()\n            });\n            \n        }\n        else {\n            response.json().then((json) => {\n                this.requestStatus = STATUS_OF_REQUEST.FAILED;\n                this.errorMessage = json.message;\n                this.updateWidget();\n            });\n            \n        }\n        \n    }\n\n    getWidget() {\n        const timerHTML = timerSection(this.timeExpired, this.requestStatus, this.locale);\n        var $content = `\n            <div class=\"apay-center-content\" style=\"visibility: ${this.requestStatus === STATUS_OF_REQUEST.LOADING ? 'visible' : 'hidden'}\">\n                <div id=\"apay-loading\"></div>\n            </div>\n            <div class=\"apay-center-content\" style=\"text-align: center; color: red; visibility: ${this.requestStatus === STATUS_OF_REQUEST.FAILED ? 'visible' : 'hidden'}\">\n                ${this.errorMessage}\n            </div>\n            <div data-animation=\"slideInOutLeft\" class=\"apay-widget apay-overflow-scroll-container\" style=\"visibility: ${this.requestStatus === STATUS_OF_REQUEST.WAITING ? 'visible' : 'hidden'}\">\n                <div id=\"apBox\">\n                    ${ widgetHeader(timerHTML) }\n                    <div id=\"apPrice\">\n                        <div>\n                            <p id=\"apScantoPayText\" style=\"font-weight: 400; color: 989898\">\n                                ${ Localization.get(this.locale, 'scan-to-pay') }\n                            </p>\n                    \n                            <p id=\"apTo\" style=\"font-weight: 300\">\n                                <strong style=\"font-weight: 400; color: 607d8b\"\n                                >${this.response.domain}</strong\n                                >\n                            </p>\n                        </div>\n                        <div style=\"color: black\">\n                            <span style=\"font-size: 20px; font-weight: 400\"> ${formatCurrency(this.response.amount)}</span>\n                            <sup style=\"font-weight: 500\">FCFA</sup>\n                        </div>\n                    </div>\n                    <div id=\"apBoxBody\">\n                        <h1 class=\"apay-qr-name\">${this.response.name}</h1>\n                        <div id=\"apQrcodeBox\">\n                            <img src=\"${this.response.image}\" alt=\"qrcode\" style=\"visibility: ${(!this.timeExpired && this.requestStatus === STATUS_OF_REQUEST.WAITING) ? 'visible' : 'hidden'}\"/>\n                        </div>\n                        <a id=\"howToPay\" href=\"https://test.akivaspay.com/client-documentation/web-payment\" target=\"_blank\">${ Localization.get(this.locale, 'how-to-pay') }</a>\n                        <a href=\"${this.response.link}\" class=\"apay-button\" target=\"_blank\">\n                            ${ Localization.get(this.locale, 'open-in-wallet') }\n                        </a>\n                        <br />\n                    </div>\n                </div>\n            </div>\n        `;\n\n        if (this.success) {\n            $content = `\n                <div class=\"apay-widget\">\n                    <div id=\"apBox\">\n                        ${ widgetHeader(timerHTML) }\n                        <div id=\"apay-success-content\">\n                            <div class=\"apay-success-checkmark\">\n                                <div class=\"check-icon\">\n                                    <span class=\"icon-line line-tip\"></span>\n                                    <span class=\"icon-line line-long\"></span>\n                                    <div class=\"icon-circle\"></div>\n                                    <div class=\"icon-fix\"></div>\n                                </div>\n                            </div>\n                            <h3 class=\"apay-text-success\">Sucessfull purchase</h3>\n                            <a href=\"#\" class=\"apay-sucess-button apay-close-widget\">\n                                ok\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n        else if (this.timeExpired) {\n            $content = `\n                <div class=\"apay-widget\">\n                    <div id=\"apBox\">\n                        ${ widgetHeader(timerHTML) }\n                        <div id=\"apPrice\">\n                            <div>\n                                <p id=\"apScantoPayText\" style=\"font-weight: 400; color: 989898\">\n                                    ${ Localization.get(this.locale, 'scan-to-pay') }\n                                </p>\n                        \n                                <p id=\"apTo\" style=\"font-weight: 300\">\n                                    <strong style=\"font-weight: 400; color: 607d8b\"\n                                    >${this.response.domain}</strong\n                                    >\n                                </p>\n                            </div>\n                            <div style=\"color: black\">\n                                <span style=\"font-size: 20px; font-weight: 400\"> ${formatCurrency(this.response.amount)}</span>\n                                <sup style=\"font-weight: 500\">FCFA</sup>\n                            </div>\n                        </div>\n                        <div id=\"apBoxBody\">\n                            <div id=\"apQrcodeBox\">\n                                <span style=\"color: red;\">\n                                    ${ Localization.get(this.locale, 'qr-code-expired') }\n                                </span>\n                            </div>\n                            <a href=\"#\" id=\"apay-regenerate\" class=\"apay-button\">\n                                ${ Localization.get(this.locale, 'regenerate') }\n                            </a>\n                            <br />\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n\n        return `\n            <div>\n                <button id=\"apay-close-btn\" class=\"apay-close-widget\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n                <div>\n                ${ $content }\n                </div>\n            </div>\n        `;\n    }\n\n    async checkTransactionStatus(uuid) {\n        this.checkTransactionInterval = setInterval(async () => {\n            if (this.timeExpired && this.checkTransactionInterval !== null) {\n                clearInterval(this.checkTransactionInterval);\n                return;\n            }\n            var response = await fetch(this.baseUrl + 'find/transaction/' + uuid + \"?filter_by=uuid\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Accept-Language\": this.locale,\n                    \"Shop-Subscription-Key\": this.shopSubscriptionKey\n                }\n            });\n            \n            if (response.status == 200) {\n                response.json().then((json) => {\n                    if (json.success == true) {\n                        this.success = true;\n                        this.timeExpired = false;\n                        this.requestStatus = STATUS_OF_REQUEST.SUCCESS;\n                        this.updateWidget();\n                        this.emit('apay-transaction-success', json);\n                        clearInterval(this.checkTransactionInterval);\n                    }\n                    \n                });\n                \n            }\n            else {\n                response.json().then((json) => {\n                    this.requestStatus = STATUS_OF_REQUEST.FAILED;\n                    this.errorMessage = json.message;\n                    this.updateWidget();\n                    clearInterval(this.checkTransactionInterval);\n                });\n                \n            }\n\n        }, 2500);\n    }\n\n    startTimer() {\n        this.timerInterval = setInterval(() => {\n            try {\n                let timer = document.getElementById('timer').innerHTML;\n                let timeArray = timer.split(/[:]+/);\n                let m = parseInt(timeArray[0]);\n                let s = AkivasPayWidget.formatSeconds(parseInt((timeArray[1] - 1)));\n                if (s === '59') {\n                    m = m - 1;\n                }\n\n                if (this.success) {\n                    clearInterval(this.timerInterval);\n                }\n\n                if (m < 0 || ( m === 0 && s === '00')) {\n                    this.timeExpired = true;\n                    document.getElementById('timer').textContent = \"\";\n                    this.updateWidget();\n                    this.regenerateCodeClickEventListener();\n                    clearInterval(this.timerInterval);\n                }\n                else {\n                    if (m == NaN || s == NaN) {\n                        clearInterval(this.timerInterval);\n                    }\n                    else {\n                        document.getElementById('timer').textContent = m.toString() + \":\" + s.toString();\n                        let percent = (m / 30) * 100;\n                        document.getElementById('apTimerMovement').style.width = percent + \"%\";\n                    }\n                    \n                }\n                \n            } catch (e) {}\n        }, 100);\n        \n    }\n\n    static formatSeconds(sec) {\n        if (sec < 10 && sec >= 0) {\n            sec = \"0\" + sec;\n        }\n        if (sec < 0) {\n            sec = \"59\";\n        }\n        return sec;\n    }\n\n    closeWidget() {\n        this.requestStatus = STATUS_OF_REQUEST.INITIALIZING;\n        if (this.modal) {\n            this.modal.classList.remove('visible');\n            this.$modal = null;\n        }\n\n        if (this.checkTransactionInterval) {\n            clearInterval(this.checkTransactionInterval);\n        }\n\n        if (this.timerInterval) {\n            clearInterval(this.timerInterval);\n        }\n        \n        this.timeExpired = false;\n        this.success = false;\n    }\n\n    on(event, listener) {\n        if (!(event in this.events)) {\n            this.events[event] = [];\n        }\n\n        if (event === 'apay-regenerate-widget' && this.events[event].length > 0) {\n            throw Error(`Cannot listen to apay-regenerate-widget event twice`);\n        }\n        \n        this.events[event].push(listener);\n    }\n\n    emit(event, ...args) {\n        if (!(event in this.events)) {\n            return;\n        }\n        this.events[event].forEach(listener => listener(...args));\n    }\n}\n\nmodule.exports = AkivasPayWidget;","import { Localization } from \"./translations.js\";\n\nconst STATUS_OF_REQUEST = Object.freeze({\n    INITIALIZING: 'initializing',\n    WAITING: 'waiting',\n    LOADING: 'loading',\n    FAILED: 'failed',\n    SUCCESS: 'success'\n});\n\nconst supported_locales = ['en', 'fr'];\nconst fallback_locale = 'en';\nconst formatCurrency = (number, separator) => {\n    if (number) {\n        let splitArray = number.toString().split('.')\n        let decimalPart = ''\n        if (splitArray.length > 1) {\n            number = splitArray[0]\n            decimalPart = '.' + splitArray[1]\n        }\n        let formattedNumber = number.toString().replace(/\\D/g, \"\");\n        let rest = formattedNumber.length % 3;\n        let currency = formattedNumber.substr(0, rest);\n        let thousand = formattedNumber.substr(rest).match(/\\d{3}/g);\n\n        if (thousand) {\n            separator = rest ? separator ? separator : \",\" : \"\";\n            currency += separator + thousand.join(\",\");\n        }\n\n        return currency + decimalPart;\n    } else {\n        return \"0\";\n    }\n}\n\nclass Response {\n    constructor(image, domain, link, name, amount){\n        Object.assign(this, { image, domain, link, name, amount });\n    }\n}\n\nconst widgetHeader = (content = '') => `\n    <div id=\"apBoxHeader\">\n        <div id=\"apLogo\">\n            <div id=\"apLogoCircle\">\n                <img src=\"https://api.apay.akivaspay.com/images/AKIVASPAY.png\" alt=\"AkivasPay\" />\n            </div>\n            <div id=\"apLogoText\">AkivasPay</div>\n        </div>\n        ${content}\n    </div>\n`;\n\nconst timerSection = (expired, requestStatus, locale) => `\n    <div id=\"apTimer\" style=\"background-color: ${ expired ? 'red' : '#3cb364'}\">\n        ${ \n            expired == true ? \n            `\n                <span id=\"apTimerText\">\n                    <span id=\"apTimerText-left\"> ${ Localization.get(locale, 'qr-code-expired') }</span>\n                    <span id=\"apTimerText-right\"> \n                        <span id=\"timer\"></span> \n                    </span>\n                </span>\n            ` : requestStatus == STATUS_OF_REQUEST.WAITING ?\n            `\n                <span id=\"apTimerMovement\"></span>\n                <span id=\"apTimerText\">\n                    <span id=\"apTimerText-left\"> ${ Localization.get(locale, 'awaiting-payment') } </span>\n                    <span id=\"apTimerText-right\"> \n                        <span id=\"timer\"></span> \n                    </span>\n                </span>\n            ` : ''\n        }\n    </div>\n`;\n\nexport {\n    STATUS_OF_REQUEST,\n    formatCurrency,\n    Response,\n    supported_locales,\n    fallback_locale,\n    widgetHeader,\n    timerSection,\n    Localization\n}","const translations = {\n    \"en\": {\n        \"qr-code-expired\": \"The Qrcode has expired\",\n        \"scan-to-pay\": \"Scan to pay\",\n        \"open-in-wallet\": \"Open in Wallet\",\n        \"how-to-pay\": \"How do i pay?\",\n        \"awaiting-payment\": \"Awaiting Payment ...\",\n        \"successful-purchase-msg\": \"The payment has been successfully completed\",\n        \"regenerate\": \"regenerate\"\n    },\n    \"fr\": {\n        \"qr-code-expired\": \"Le Qrcode a expiré\",\n        \"scan-to-pay\": \"Scannez pour payer\",\n        \"open-in-wallet\": \"Ouvrir dans le portefeuille\",\n        \"how-to-pay\": \"Comment payer ?\",\n        \"awaiting-payment\": \"En attente de paiement...\",\n        \"successful-purchase-msg\": \"Le paiement a été effectué avec succès\",\n        \"regenerate\": \"régénérer\"\n    }\n};\n\nexport class Localization {\n    static get(locale, key){\n        return translations[locale][key];\n    }\n}\n"],"names":[],"version":3,"file":"main.js.map"}