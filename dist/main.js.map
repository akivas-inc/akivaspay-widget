{"mappings":"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","sources":["src/index.js","src/helpers.js","src/translations.js"],"sourcesContent":["import { STATUS_OF_REQUEST, sleep, formatCurrency, Response, fallback_locale, supported_locales } from \"./helpers.js\";\nimport { Localization } from \"./translations.js\";\nimport styles from './styles.css';\n\nexport class AkivasPayWidget {\n    baseUrl = \"https://api.apay.akivaspay.com/\";\n    shopSubscriptionKey;\n    cancel = false;\n    success = false;\n    requestStatus = STATUS_OF_REQUEST.INITIALIZING;\n    timeExpired = false;\n    errorMessage = '';\n    locale;\n    apayContainer;\n    modal;\n    response = new Response();\n    interval;\n    events = {\n        'apay-transaction': []\n    };\n\n    constructor(shopSubscriptionKey, locale = fallback_locale) {\n        this.shopSubscriptionKey = shopSubscriptionKey;\n        if (locale in supported_locales) {\n            this.locale = locale;\n        }\n        else {\n            this.locale = fallback_locale;\n        }\n        this.apayContainer = document.createElement('div');\n        this.initWidget();\n    }\n\n    initWidget() {\n        this.apayContainer.innerHTML = '<div class=\"akivas-pay-modal\" id=\"akivaspayModal\" data-animation=\"slideInOutLeft\"></div>';\n        document.querySelector('body').appendChild(this.apayContainer);\n        this.modal = document.getElementById(\"akivaspayModal\");\n    }\n\n    closeWidgetEventListener() {\n        const closeEl = document.getElementById('apay-close-btn');\n        if (closeEl) {\n            closeEl.addEventListener('click', () => {\n                this.closeWidget();\n            })\n        }\n    }\n\n    updateWidget() {\n        this.modal.innerHTML = this.getWidget();\n        this.closeWidgetEventListener();\n    }\n\n    showModal() {\n        this.modal.innerHTML = this.getWidget();\n        this.closeWidgetEventListener();\n    }\n\n    async show(name, external_uuid, amount, description = '') {\n        this.requestStatus = STATUS_OF_REQUEST.LOADING;\n        this.modal.classList.add('visible');\n        this.showModal();\n        let data = {\n            \"shop-subscription-key\": this.shopSubscriptionKey,\n            \"name\": name,\n            \"uuid\": external_uuid,\n            \"amount\": amount,\n            \"description\": description\n        };\n\n        var response = await fetch(this.baseUrl + 'generate/qrcode', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n                \"Accept-Language\": this.locale\n            },\n            body: JSON.stringify(data),\n        });\n        \n        if (response.ok) {\n            response.json().then((json) => {\n                this.response = new Response(\n                    json.image,\n                    json.domain,\n                    json.link,\n                    name,\n                    amount\n                );\n                this.requestStatus = STATUS_OF_REQUEST.WAITING;\n                this.updateWidget();\n                document.getElementById('timer').innerHTML = 30 + \":\" + 0;\n                this.startTimer().then();\n                this.checkTransactionStatus(json.uuid).then()\n            });\n            \n        }\n        else {\n            response.json().then((json) => {\n                this.requestStatus = STATUS_OF_REQUEST.FAILED;\n                this.errorMessage = json.message;\n                this.updateWidget();\n            });\n            \n        }\n        \n    }\n\n    getWidget() {\n        var $content = `\n            <div class=\"apay-center-content\" style=\"visibility: ${this.requestStatus === STATUS_OF_REQUEST.LOADING ? 'visible' : 'hidden'}\">\n                <div id=\"apay-loading\"></div>\n            </div>\n            <div class=\"apay-center-content\" style=\"text-align: center; color: red; visibility: ${this.requestStatus === STATUS_OF_REQUEST.FAILED ? 'visible' : 'hidden'}\">\n                ${this.errorMessage}\n            </div>\n            <div class=\"apay-widget\" style=\"visibility: ${this.requestStatus === STATUS_OF_REQUEST.WAITING ? 'visible' : 'hidden'}\">\n                <div id=\"apBox\">\n                    <div id=\"apBoxHeader\">\n                        <div id=\"apLogo\">\n                            <div id=\"apLogoCircle\">\n                                <img src=\"./../images/akivaspay.png\" alt=\"AkivasPay\" />\n                            </div>\n                            <div id=\"apLogoText\">AkivasPay</div>\n                        </div>\n                        <div id=\"apTimer\">\n                            <div style=\"background-color: ${this.timeExpired ? 'red' : 'transparent'}\">\n                                <span id=\"apTimerMovement\"></span>\n                                <span id=\"apTimerText\">\n                                    <span id=\"apTimerText-left\"> ${this.timeExpired ? Localization.get(this.locale, 'qr-code-expired') : this.success ? Localization.get(this.locale, 'successful-purchase-msg') : Localization.get(this.locale, 'awaiting-payment')} </span>\n                                    <span id=\"apTimerText-right\"> \n                                        <span id=\"timer\"></span> \n                                    </span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"apPrice\">\n                        <div>\n                            <p id=\"apScantoPayText\" style=\"font-weight: 400; color: 989898\">\n                                ${ Localization.get(this.locale, 'scan-to-pay') }\n                            </p>\n                    \n                            <p id=\"apTo\" style=\"font-weight: 300\">\n                                <strong style=\"font-weight: 400; color: 607d8b\"\n                                >${this.response.domain}</strong\n                                >\n                            </p>\n                        </div>\n                        <div style=\"color: black\">\n                            <span style=\"font-size: 20px; font-weight: 400\"> ${formatCurrency(this.response.amount)}</span>\n                            <sup style=\"font-weight: 500\">FCFA</sup>\n                        </div>\n                    </div>\n                    <div id=\"apBoxBody\" style=\"padding-right: 10px\">\n                        <h3 style=\"font-weight: bold; text-align: center; margin-top:10px; padding-left: 10px;\">${this.response.name}</h3>\n                        <div id=\"apQrcodeBox\">\n                            <img src=\"${this.response.image}\" width=\"150\" height=\"150\" alt=\"qrcode\" style=\"visibility: ${(!this.timeExpired && this.requestStatus === STATUS_OF_REQUEST.WAITING) ? 'visible' : 'hidden'}\"/>\n                        </div>\n                        <a id=\"howToPay\" href=\"https://test.akivaspay.com/client-documentation/web-payment\" target=\"_blank\">${ Localization.get(this.locale, 'how-to-pay') }</a>\n                        <a href=\"${this.response.link}\" class=\"apay-button\" target=\"_blank\">\n                            ${ Localization.get(this.locale, 'open-in-wallet') }\n                        </a>\n                        <br />\n                    </div>\n                </div>\n            </div>\n        `;\n\n        if (this.success) {\n            $content = `\n                <div class=\"apay-widget\">\n                    <div id=\"apBox\">\n                        <div id=\"apBoxHeader\">\n                            <div id=\"apLogo\">\n                                <div id=\"apLogoCircle\">\n                                    <img src=\"./../images/akivaspay.png\" alt=\"AkivasPay\" />\n                                </div>\n                                <div id=\"apLogoText\">AkivasPay</div>\n                            </div>\n                        </div>\n                        <div id=\"apay-success-content\">\n                            <div class=\"apay-success-checkmark\">\n                                <div class=\"check-icon\">\n                                    <span class=\"icon-line line-tip\"></span>\n                                    <span class=\"icon-line line-long\"></span>\n                                    <div class=\"icon-circle\"></div>\n                                    <div class=\"icon-fix\"></div>\n                                </div>\n                            </div>\n                            <h3 class=\"apay-text-success\">Sucessfull purchase</h3>\n                            <button class=\"apay-sucess-button\">\n                                ok\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }\n        \n        return `\n            <div>\n                <button id=\"apay-close-btn\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n                <div>\n                    ${ $content }\n                </div>\n            </div>\n        `;\n    }\n\n    async checkTransactionStatus(uuid) {\n        if ((this.cancel || this.timeExpired) && this.interval !== null) {\n            clearInterval(this.interval);\n        }\n\n        this.interval = setInterval(async () => {\n\n            var response = await fetch(this.baseUrl + 'find/transaction/' + uuid + \"?filter_by=uuid&shop-subscription-key=\" + this.shopSubscriptionKey, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Accept-Language\": this.locale\n                }\n            });\n            \n            if (response.status == 200) {\n                this.success = true;\n                this.updateWidget();\n                this.emit('apay-transaction', response);\n            }\n            else if (response.status == 406) {\n                //\n            }\n            else {\n                response.json().then((json) => {\n                    this.requestStatus = STATUS_OF_REQUEST.FAILED;\n                    this.errorMessage = json.message;\n                    this.updateWidget();\n                    clearInterval(this.interval);\n                });\n                \n            }\n\n        }, 2500);\n    }\n\n    async startTimer() {\n        try {\n            let timer = document.getElementById('timer').innerHTML;\n            let timeArray = timer.split(/[:]+/);\n            let m = timeArray[0];\n            let s = AkivasPayWidget.checkSecond((timeArray[1] - 1));\n            if (s === \"59\") {\n                m = m - 1\n            }\n            if (this.success) {\n                return;\n            }\n            if (m < 0) {\n                this.timeExpired = true;\n                this.updateWidget();\n                return;\n            }\n            document.getElementById('timer').innerHTML =\n                m + \":\" + s;\n            let percent = (m / 30) * 100;\n            document.getElementById('apTimerMovement').style.width = percent + \"%\";\n            await sleep(500);\n            return this.startTimer();\n        } catch (e) {}\n    }\n\n    static checkSecond(sec) {\n        if (sec < 10 && sec >= 0) {\n            sec = \"0\" + sec\n        }\n        if (sec < 0) {\n            sec = \"59\"\n        }\n        return sec;\n    }\n\n    closeWidget() {\n        this.requestStatus = STATUS_OF_REQUEST.INITIALIZING;\n        if (this.modal) {\n            this.modal.classList.remove('visible');\n            this.$modal = null;\n        }\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n        this.cancel = true;\n\n    }\n\n    on(event, listener) {\n        if (!(event in this.events)) {\n            this.events[event] = [];\n        }\n        this.events[event].push(listener);\n    }\n\n    emit(event, ...args) {\n        if (!(event in this.events)) {\n            return;\n        }\n        this.events[event].forEach(listener => listener(...args));\n    }\n}\n\nmodule.exports = AkivasPayWidget;","const STATUS_OF_REQUEST = Object.freeze({\n    INITIALIZING: 'initializing',\n    WAITING: 'waiting',\n    LOADING: 'loading',\n    FAILED: 'failed',\n});\n\nconst sleep = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst supported_locales = ['en', 'fr'];\nconst fallback_locale = 'en';\nconst formatCurrency = (number, separator) => {\n    if (number) {\n        let splitArray = number.toString().split('.')\n        let decimalPart = ''\n        if (splitArray.length > 1) {\n            number = splitArray[0]\n            decimalPart = '.' + splitArray[1]\n        }\n        let formattedNumber = number.toString().replace(/\\D/g, \"\");\n        let rest = formattedNumber.length % 3;\n        let currency = formattedNumber.substr(0, rest);\n        let thousand = formattedNumber.substr(rest).match(/\\d{3}/g);\n\n        if (thousand) {\n            separator = rest ? separator ? separator : \",\" : \"\";\n            currency += separator + thousand.join(\",\");\n        }\n\n        return currency + decimalPart;\n    } else {\n        return \"0\";\n    }\n}\n\nclass Response {\n    constructor(image, domain, link, name, amount){\n        Object.assign(this, { image, domain, link, name, amount });\n    }\n}\n\nexport {\n    sleep,\n    STATUS_OF_REQUEST,\n    formatCurrency,\n    Response,\n    supported_locales,\n    fallback_locale\n}","const translations = {\n    \"en\": {\n        \"qr-code-expired\": \"The Qrcode has expired\",\n        \"scan-to-pay\": \"Scan to pay\",\n        \"open-in-wallet\": \"Open in Wallet\",\n        \"how-to-pay\": \"How do i pay?\",\n        \"awaiting-payment\": \"Awaiting Payment ...\",\n        \"successful-purchase-msg\": \"The payment has been successfully completed\",\n    },\n    \"fr\": {\n        \"qr-code-expired\": \"Le Qrcode a expiré\",\n        \"scan-to-pay\": \"Scannez pour payer\",\n        \"open-in-wallet\": \"Ouvrir dans le portefeuille\",\n        \"how-to-pay\": \"Comment payer ?\",\n        \"awaiting-payment\": \"En attente de paiement...\",\n        \"successful-purchase-msg\": \"Le paiement a été effectué avec succès\",\n    }\n};\n\nexport class Localization {\n    static get(locale, key){\n        return translations[locale][key];\n    }\n}\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}